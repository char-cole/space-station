{"version":3,"sources":["components/ChangeProjectionButtons.js","actions/index.js","containers/ChangeProjectionButtonsContainer.js","components/Marker.js","containers/MarkerContainer.js","components/CityMarkers.js","containers/CityMarkerContainer.js","components/WorldMap.js","containers/WorldMapContainer.js","components/ProjectionInfo.js","containers/ProjectionInfoContainer.js","components/TrackingMap.js","components/LocationButtons.js","containers/LocationButtonsContainer.js","components/FlyoverDisplay.js","containers/FlyoverDisplayContainer.js","components/StationTracker.js","containers/StationTrackerContainer.js","components/Flyover.js","App.js","AppContainer.js","reducers/index.js","store.js","state.js","index.js"],"names":["ChangeProjectionButtons","props","buttonDivs","allProjections","map","x","i","geo","selectedProjection","react_default","a","createElement","className","key","onClick","changeProjection","name","loadFlyover","lat","long","dispatch","fetch","then","response","json","pass","console","log","dateRaw","Date","risetime","endRaw","duration","dateObj","hours","getHours","toLocaleString","minimumIntegerDigits","useGrouping","minutes","getMinutes","seconds","getSeconds","day","getDate","month","getMonth","year","getFullYear","endObj","dateString","newTimeZone","timeZone","newDate","timeZoneConverter","passDate","loaded","hr","min","sec","mon","endHr","endMin","endSec","endDay","endMon","type","value","flyoverLoaded","catch","err","error","connect","state","projection","Marker","_this","this","geoHill","scale","translate","geoOrthographic","rotate","r","current","longLat","geoNaturalEarth1","geoAzimuthalEqualArea","geoConicEqualArea","geoMercator","cx","cy","fill","Component","CityMarker","currentLongLat","cities","city","drawCity","buttons","CityMarkers","WorldMap","geoPath","geoGraticule","step","getMap","_this2","loadCurrent","width","height","viewBox","worldData","d","concat","length","stroke","strokeWidth","CityMarkerContainer","MarkerContainer","status","feature","objects","countries","features","res","parseFloat","iss_position","longitude","latitude","ProjectionInfo","data-toggle","data-target","class","id","desc","TrackingMap","ProjectionInfoContainer","ChangeProjectionButtonsContainer","WorldMapContainer","LocationButtons","item","index","country","flyover","FlyoverDisplay","StationTracker","max","inputLat","onChange","e","updateLat","target","inputLong","updateLong","b","alert","FlyoverDisplayContainer","Flyover","StationTrackerContainer","LocationButtonsContainer","App","BrowserRouter","role","href","style","backgroundColor","Switch","Route","path","component","rootReducer","combineReducers","arguments","undefined","action","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","timezone","ReactDOM","render","es","AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.e6e4a7a2.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst ChangeProjectionButtons = (props) => {\r\n    let buttonDivs = props.allProjections.map( (x, i) => {\r\n        if (x.geo !== props.selectedProjection.geo) {\r\n            return (\r\n                    <button\r\n                        className=\"btn btn-block btn-secondary my-1\"\r\n                        key={i}\r\n                        onClick={ () => {\r\n                        return props.changeProjection(x)} }\r\n                    >\r\n                        {x.name} Projection\r\n                    </button>\r\n            )\r\n        }\r\n        else return null;\r\n    })\r\n    return (\r\n        <div>\r\n            {buttonDivs}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeProjectionButtons;","import { feature } from \"topojson-client\"\r\nimport timeZoneConverter from 'time-zone-converter'\r\nimport timeZone from \"time-zone\"\r\n\r\nexport function loadFlyover(lat, long) {\r\n    return function (dispatch) {\r\n        fetch(\"http://api.open-notify.org/iss-pass.json?lat=\"+lat+\"&lon=\"+long)\r\n        .then((response) => {return response.json()})\r\n        .then((pass) => {\r\n            console.log(pass);\r\n            const dateRaw = new Date(pass.response[0].risetime*1000);\r\n            const endRaw = new Date((pass.response[0].risetime + pass.response[0].duration)*1000);\r\n            const dateObj = {\r\n                hours: dateRaw.getHours().toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                minutes: dateRaw.getMinutes().toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                seconds: dateRaw.getSeconds().toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                day: dateRaw.getDate().toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                month: dateRaw.getMonth()+1,\r\n                year: dateRaw.getFullYear()\r\n            };\r\n            const endObj = {\r\n                hours: endRaw.getHours().toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                minutes: endRaw.getMinutes().toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                seconds: endRaw.getSeconds().toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                day: endRaw.getDate().toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                month: endRaw.getMonth()+1,\r\n                year: endRaw.getFullYear()\r\n            };\r\n            let dateString = dateObj.year+\"/\"+dateObj.month.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})+\"/\"+dateObj.day+\" \"+dateObj.hours+\":\"+dateObj.minutes+\":\"+dateObj.seconds;\r\n            console.log(\"date string: \"+dateString) // '2018/10/11 06:00:00';\r\n            let newTimeZone = timeZone(dateRaw);\r\n            console.log(newTimeZone);\r\n            let newDate = timeZoneConverter(dateString, newTimeZone, -5, 'YYYY/MM/DD HH:mm:ss');\r\n            console.log(\"new date: \"+newDate) // '2018/10/11 06:00:00';\r\n            const passDate = {\r\n                loaded: true,\r\n                lat: lat,\r\n                long: long,\r\n                hr: dateObj.hours,\r\n                min: dateObj.minutes.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                sec: dateObj.seconds.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                day: dateObj.day,\r\n                mon: dateObj.month,\r\n                endHr: endObj.hours.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                endMin: endObj.minutes.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                endSec: endObj.seconds.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}),\r\n                endDay: endObj.day,\r\n                endMon: endObj.month,\r\n            };\r\n            console.log(passDate);\r\n        dispatch(flyoverLoaded(passDate));\r\n        })\r\n        .catch(err => console.error('Caught error: ', err))\r\n    };\r\n}\r\n\r\nfunction flyoverLoaded(passDate) {\r\n    return {\r\n        type: \"FLYOVER_LOADED\",\r\n        value: passDate\r\n    };\r\n}\r\n\r\nexport function updateLat(co) {\r\n    return {\r\n        type: \"LAT_UPDATED\",\r\n        value: co\r\n    };\r\n}\r\n\r\nexport function updateLong(co) {\r\n    return {\r\n        type: \"LONG_UPDATED\",\r\n        value: co\r\n    };\r\n}\r\n\r\nexport function updateCoords(lat, long) {\r\n    return {\r\n        type: \"COORDS_UPDATED\",\r\n        value: [lat,long]\r\n    }\r\n}\r\n\r\nexport function getMap() {\r\n    return function (dispatch) {\r\n        fetch(\"https://unpkg.com/world-atlas@1/world/110m.json\")\r\n        .then(response => {\r\n          if (response.status !== 200) {\r\n            console.log(`There was a problem: ${response.status}`)\r\n            return\r\n          }\r\n          response.json()\r\n          .then(worldData => {\r\n              dispatch(mapLoaded(feature(worldData, worldData.objects.countries).features))\r\n          })\r\n        })\r\n        .catch(err => console.error('Caught error: ', err))\r\n    }\r\n}\r\n\r\nfunction mapLoaded(data) {\r\n    return {\r\n        type: \"MAP_LOADED\",\r\n        value: data\r\n    }\r\n}\r\n\r\nexport function loadCurrent() {\r\n    return function (dispatch) {\r\n        fetch(\"http://api.open-notify.org/iss-now.json\")\r\n        .then(response => {\r\n            if (response.status !== 200) {\r\n                console.log(`There was a problem: ${response.status}`)\r\n                return\r\n            }\r\n            response.json()\r\n            .then(res => {\r\n                let current = {\r\n                    loaded: true,\r\n                    longLat: [parseFloat(res.iss_position.longitude), parseFloat(res.iss_position.latitude)]\r\n                };\r\n                console.log(current.longLat);\r\n                dispatch(currentLoaded(current))\r\n            })\r\n        })\r\n        .catch(err => console.error('Caught error: ', err))\r\n    }\r\n}\r\n\r\nfunction currentLoaded(coords) {\r\n    return {\r\n        type: \"CURRENT_LOADED\",\r\n        value: coords\r\n    }\r\n}\r\n\r\nexport function changeProjection(projection) {\r\n    return {\r\n        type: 'PROJECTION_CHANGED',\r\n        value: projection\r\n    }\r\n}","import { connect } from \"react-redux\";\r\nimport ChangeProjectionButtons from \"../components/ChangeProjectionButtons\";\r\nimport { changeProjection } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectedProjection: state.selectedProjection,\r\n    allProjections: state.allProjections\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeProjection: (projection) => {\r\n        dispatch(changeProjection(projection))\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeProjectionButtons);","import React, {Component} from 'react';\r\nimport { geoConicEqualArea, geoNaturalEarth1, geoMercator, geoAzimuthalEqualArea, geoOrthographic } from \"d3-geo\"\r\nimport { geoHill } from \"d3-geo-projection\"\r\n\r\nclass Marker extends Component {\r\n    projection(projection) {\r\n        let rotation = (r) => {\r\n            if (r[0]) {\r\n                if (r[0] < -45) return [90,0]\r\n                if (r[0] > 45 && r[0] < 135) return [-90,0]\r\n                if (r[0] >= 135) return [-180,0]\r\n                else return [0,0]\r\n            } else return [0,0]\r\n        }\r\n        let projObj = {\r\n           \"geoHill\": () => {\r\n                return geoHill()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n           },\r\n           \"geoOrthographic\": () => {\r\n                return geoOrthographic()\r\n                .scale(200)\r\n                .translate([ 800 / 2, 450 / 2 ])\r\n                .rotate( rotation(this.props.current.longLat) || [0,0] );\r\n            },\r\n            \"geoNaturalEarth1\": () => {\r\n                return geoNaturalEarth1()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n            \"geoAzimuthalEqualArea\": () => {\r\n                return geoAzimuthalEqualArea()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ])\r\n                .rotate([0,-90]);\r\n            },\r\n            \"geoConicEqualArea\": () => {\r\n                return geoConicEqualArea()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n            \"geoMercator\": () => {\r\n                return geoMercator()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n        }\r\n        return projObj[projection]()\r\n    }\r\n    render() {\r\n        if(this.props.current.loaded){\r\n                return (\r\n                    <circle\r\n                    cx={ this.projection(this.props.selectedProjection.geo)(this.props.current.longLat)[0] }\r\n                    cy={ this.projection(this.props.selectedProjection.geo)(this.props.current.longLat)[1] }\r\n                    r={ 5 }\r\n                    fill=\"#E91E63\"\r\n                    className=\"marker\"\r\n                    />\r\n                )\r\n        } else return null\r\n    }\r\n}\r\n\r\nexport default Marker;","import { connect } from \"react-redux\";\r\nimport Marker from \"../components/Marker\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    current: state.current,\r\n    selectedProjection: state.selectedProjection\r\n});\r\n\r\nexport default connect(mapStateToProps)(Marker);","import React from 'react';\r\nimport {\r\n    geoConicEqualArea,\r\n    geoNaturalEarth1,\r\n    geoMercator,\r\n    geoAzimuthalEqualArea,\r\n    geoOrthographic\r\n} from \"d3-geo\"\r\nimport { geoHill } from \"d3-geo-projection\"\r\n\r\n\r\nconst CityMarker = (props) => {\r\n\r\n    let currentLongLat;\r\n\r\n    if (props.current.loaded) {\r\n        currentLongLat = props.current.longLat;\r\n    } else currentLongLat = [0,0]\r\n\r\n    let projection = (projection) => {\r\n\r\n        let rotation = (r) => {\r\n            if (r[0]) {\r\n                if (r[0] < -45) return [90,0]\r\n                if (r[0] > 45 && r[0] < 135) return [-90,0]\r\n                if (r[0] >= 135) return [-180,0]\r\n                else return [0,0]\r\n            } else return [0,0]\r\n        }\r\n\r\n        let projObj = {\r\n           \"geoHill\": () => {\r\n                return geoHill()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n           \"geoOrthographic\": () => {\r\n                return geoOrthographic()\r\n                .scale(200)\r\n                .translate([ 800 / 2, 450 / 2 ])\r\n                .rotate( rotation(currentLongLat) );\r\n            },\r\n            \"geoNaturalEarth1\": () => {\r\n                return geoNaturalEarth1()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n            \"geoAzimuthalEqualArea\": () => {\r\n                return geoAzimuthalEqualArea()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ])\r\n                .rotate([0,-90]);\r\n            },\r\n            \"geoConicEqualArea\": () => {\r\n                return geoConicEqualArea()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n            \"geoMercator\": () => {\r\n                return geoMercator()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n        }\r\n\r\n        return projObj[projection]();\r\n\r\n    }\r\n\r\n    let cityDivs = props.cities.map( (city, i) => {\r\n\r\n        let longLat = [city.long,city.lat];\r\n\r\n        let drawCity = () => {\r\n            return (\r\n                <circle\r\n                    key={ i }\r\n                    cx={ projection(props.selectedProjection.geo)(longLat)[0] }\r\n                    cy={ projection(props.selectedProjection.geo)(longLat)[1] }\r\n                    r={ 5 }\r\n                    fill=\"white\"\r\n                    className=\"marker\"\r\n                />\r\n            )\r\n        }\r\n\r\n        if (props.selectedProjection.geo !== \"geoOrthographic\") {\r\n            return drawCity();\r\n        }\r\n\r\n        if (props.current.loaded) {\r\n\r\n            if (props.current.longLat[0] >= 45 && props.current.longLat[0] < 135) {\r\n                if (city.long >= 45 && city.long < 135) {\r\n                    return drawCity();\r\n                } else return null\r\n            }\r\n\r\n            if (props.current.longLat[0] >= 135) {\r\n                if (city.long >= 135) {\r\n                    return drawCity();\r\n                } else return null\r\n            }\r\n\r\n            if (props.current.longLat[0] < -45) {\r\n                if (city.long < -45) {\r\n                   return drawCity();\r\n                } else return null\r\n            }\r\n\r\n            else {\r\n                if (city.long >= -45 && city.long < 45) {\r\n                    return drawCity();\r\n                } else return null\r\n            }\r\n\r\n        } else {\r\n            if (city.long >= -45 && city.long < 45) {\r\n                return drawCity();\r\n            } else return null\r\n        }\r\n    })\r\n\r\n    return cityDivs\r\n}\r\n\r\nexport default CityMarker;","import { connect } from \"react-redux\";\r\nimport CityMarkers from \"../components/CityMarkers\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cities: state.buttons,\r\n    selectedProjection: state.selectedProjection,\r\n    current: state.current,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CityMarkers);","import React, { Component } from \"react\"\r\nimport {\r\n    geoConicEqualArea,\r\n    geoMercator,\r\n    geoNaturalEarth1,\r\n    geoAzimuthalEqualArea,\r\n    geoOrthographic,\r\n    geoPath,\r\n    geoGraticule } from \"d3-geo\"\r\nimport { geoHill } from \"d3-geo-projection\"\r\nimport MarkerContainer from \"../containers/MarkerContainer\"\r\nimport CityMarkerContainer from \"../containers/CityMarkerContainer\";\r\n\r\nclass WorldMap extends Component {\r\n\r\n    graticule(projection) {\r\n        geoPath().projection(projection)(geoGraticule().step([10,10])())\r\n    }\r\n\r\n    projection(projection) {\r\n        let rotation = (r) => {\r\n            if (r[0]) {\r\n                if (r[0] < -45) return [90,0]\r\n                if (r[0] > 45 && r[0] < 135) return [-90,0]\r\n                if (r[0] >= 135) return [-180,0]\r\n                else return [0,0]\r\n            } else return [0,0]\r\n        }\r\n        let projObj = {\r\n           \"geoHill\": () => {\r\n                return geoHill()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n           },\r\n           \"geoOrthographic\": () => {\r\n                return geoOrthographic()\r\n                .scale(200)\r\n                .translate([ 800 / 2, 450 / 2 ])\r\n                .rotate(rotation(this.props.current.longLat || [0,0]));\r\n            },\r\n            \"geoNaturalEarth1\": () => {\r\n                return geoNaturalEarth1()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n            \"geoAzimuthalEqualArea\": () => {\r\n                return geoAzimuthalEqualArea()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ])\r\n                .rotate([0,-90]);\r\n            },\r\n            \"geoConicEqualArea\": () => {\r\n                return geoConicEqualArea()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n            \"geoMercator\": () => {\r\n                return geoMercator()\r\n                .scale(100)\r\n                .translate([ 800 / 2, 450 / 2 ]);\r\n            },\r\n        }\r\n        return projObj[projection]()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getMap();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div onClick={ () => {return this.props.loadCurrent()} } >\r\n\r\n                {/* SVG object to render countries, graticule (missing), and markers */}\r\n\r\n                <svg width={ 800 } height={ 450 } viewBox=\"0 0 800 450\">\r\n\r\n                    {/* <g className=\"graticule\">\r\n                        <path\r\n                            d={ this.graticule(this.projection) }\r\n                            stroke=\"#efefef\"\r\n                            strokeWidth={0.3}\r\n                        />\r\n                    </g> */}\r\n\r\n                    <g className=\"countries\">\r\n                    {\r\n                        this.props.worldData.map((d,i) => (\r\n                        <path\r\n                            key={ `path-${ i }` }\r\n                            d={ geoPath().projection(this.projection(this.props.selectedProjection.geo))(d) }\r\n                            className=\"country\"\r\n                            fill={ `rgba(38,250,56,${1 / this.props.worldData.length * i + .1})` }\r\n                            stroke=\"#FFFFFF\"\r\n                            strokeWidth={ 0.5 }\r\n                        />\r\n                        ))\r\n                    }\r\n                    </g>\r\n\r\n                    <g className=\"markers\">\r\n                    <CityMarkerContainer />\r\n                    <MarkerContainer />\r\n                    </g>\r\n\r\n                </svg>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorldMap;","import { connect } from \"react-redux\";\r\nimport WorldMap from \"../components/WorldMap\";\r\nimport { getMap, loadCurrent } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    worldData: state.worldData,\r\n    selectedProjection: state.selectedProjection,\r\n    current: state.current\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getMap: () => {\r\n        dispatch(getMap())\r\n    },\r\n    loadCurrent: () => {\r\n        dispatch(loadCurrent())\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorldMap);","import React from \"react\"\r\n\r\nconst ProjectionInfo = (props) => {\r\n    return (\r\n        <div>\r\n            <button\r\n            className=\"btn btn-block btn-outline-light\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#info-collapse\">\r\n                <h4 className=\"m-0\">\r\n                    {props.selectedProjection.name}\r\n                    <i className=\"ml-4 fas fa-caret-down\"></i>\r\n                </h4>\r\n            </button>\r\n            <div class=\"collapse show\" id=\"info-collapse\">\r\n                <small className=\"text-white px-3 py-2 collapse show\">\r\n                    {props.selectedProjection.desc}\r\n                </small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectionInfo;","import { connect } from \"react-redux\";\r\nimport ProjectionInfo from \"../components/ProjectionInfo\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectedProjection: state.selectedProjection,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProjectionInfo);","import React from 'react';\r\nimport ChangeProjectionButtonsContainer from '../containers/ChangeProjectionButtonsContainer';\r\nimport WorldMapContainer from '../containers/WorldMapContainer';\r\nimport ProjectionInfoContainer from '../containers/ProjectionInfoContainer';\r\n\r\nconst TrackingMap = () => {\r\n    return (\r\n        <div className=\"container\" >\r\n        <div className=\"row\">\r\n          <h2 className=\"text-white px-5 py-2\">\r\n            ISS Tracking Map\r\n          </h2>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-3\">\r\n            <ProjectionInfoContainer />\r\n            <ChangeProjectionButtonsContainer />\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <WorldMapContainer />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TrackingMap;","import React from 'react';\r\n\r\nconst LocationButtons = (props) => {\r\n\r\n    let buttons = props.buttons;\r\n\r\n    let buttonDivs = buttons.map( (item, index) => {\r\n        return (\r\n            <div key={index}>\r\n                <button\r\n                    className=\"locButton btn btn-secondary\"\r\n                    onClick={()=> {return props.loadFlyover(item.lat,item.long)}}\r\n                    >{item.name},<br/>{item.country}\r\n                </button>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div  className=\"d-flex flex-row\">\r\n            {buttonDivs}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LocationButtons","import { connect } from \"react-redux\";\r\nimport LocationButtons from \"../components/LocationButtons\";\r\nimport { loadFlyover, } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    flyover: state.flyover,\r\n    buttons: state.buttons\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadFlyover: (lat, long) => {\r\n        dispatch(loadFlyover(lat, long))\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationButtons);","import React, {Component} from 'react';\r\n\r\nclass FlyoverDisplay extends Component {\r\n    render() {\r\n        if (this.props.flyover.loaded) {\r\n            return (\r\n                <div className=\"text-white\">\r\n                    <p>\r\n                        <i>\r\n                            from\r\n                        </i>\r\n                        <span className=\"font-weight-bold large-text\">\r\n                            &nbsp;{this.props.flyover.hr}:{this.props.flyover.min}:{this.props.flyover.sec}&nbsp;\r\n                        </span>\r\n                        <i>\r\n                            until\r\n                        </i>\r\n                        <span className=\"font-weight-bold large-text\">\r\n                            &nbsp;{this.props.flyover.endHr}:{this.props.flyover.endMin}:{this.props.flyover.endSec}&nbsp;\r\n                        </span>\r\n                        (Central Daylight Time)\r\n                        <i>\r\n                            &nbsp;on\r\n                        </i>\r\n                        <span className=\"font-weight-bold large-text\">\r\n                            &nbsp;{this.props.flyover.mon}/{this.props.flyover.day}\r\n                        </span>\r\n                        <br/>\r\n                        <i>\r\n                            Location:&nbsp;\r\n                        </i>\r\n                        <span className=\"font-weight-bold large-text\">\r\n                            &nbsp;{this.props.flyover.lat}, {this.props.flyover.long}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            )\r\n        } else return null;\r\n    }\r\n}\r\n\r\nexport default FlyoverDisplay;\r\n\r\n","import { connect } from \"react-redux\";\r\nimport FlyoverDisplay from \"../components/FlyoverDisplay\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    flyover: state.flyover,\r\n});\r\n\r\nexport default connect(mapStateToProps)(FlyoverDisplay);","import React from 'react';\r\nimport FlyoverDisplayContainer from \"../containers/FlyoverDisplayContainer\";\r\n\r\nlet boundsWarning = \"Latitude can only be between -90 and 90. Longitude can only be between -180 and 180.\"\r\n\r\nconst StationTracker = (props) => {\r\n\r\n  return (\r\n    <div id=\"test\" className=\"row\">\r\n\r\n        <div className=\"col-12 col-md-3 d-flex flex-column justify-content-around\">\r\n          <input\r\n            type=\"number\" name=\"Latitude\" min=\"-90\" max=\"90\" step=\"0.00000001\"\r\n            value={props.inputLat}\r\n            onChange={(e) => props.updateLat(e.target.value)}>\r\n          </input>\r\n\r\n          <input\r\n            type=\"number\" name=\"Longitude\" step=\"0.00000001\"\r\n            value={props.inputLong}\r\n            onChange={(e) => props.updateLong(e.target.value)}>\r\n          </input>\r\n\r\n          <button\r\n            className=\"btn btn-light\"\r\n            onClick={\r\n              (a,b)=> {\r\n                if (\r\n                  props.inputLat >= -90 &&\r\n                  props.inputLat <= 90 &&\r\n                  props.inputLong >= -180 &&\r\n                  props.inputLong <= 180\r\n                ) {\r\n                  return props.loadFlyover(props.inputLat,props.inputLong);\r\n                } else alert(boundsWarning)\r\n              }\r\n            }>\r\n            Update Coordinates\r\n          </button>\r\n        </div>\r\n\r\n      <div className=\"col-12 col-md-9\">\r\n        {<FlyoverDisplayContainer/>}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StationTracker;\r\n","import { connect } from \"react-redux\";\r\nimport StationTracker from \"../components/StationTracker\";\r\nimport { loadFlyover, updateLat, updateLong } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    flyover: state.flyover,\r\n    inputLat: state.inputLat,\r\n    inputLong: state.inputLong,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadFlyover: (lat, long) => {\r\n        dispatch(loadFlyover(lat, long))\r\n    },\r\n    updateLat: (lat) => {\r\n        dispatch(updateLat(lat))\r\n    },\r\n    updateLong: (long) => {\r\n        dispatch(updateLong(long))\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StationTracker);","import React from 'react';\r\nimport LocationButtonsContainer from '../containers/LocationButtonsContainer';\r\nimport StationTrackerContainer from '../containers/StationTrackerContainer';\r\n\r\nconst Flyover = () => {\r\n    return (\r\n        <div className=\"container\" >\r\n        <div className=\"row\">\r\n          <h2 className=\"text-white px-5 py-2\">\r\n            When will the ISS be overhead next?\r\n          </h2>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <StationTrackerContainer />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <LocationButtonsContainer />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Flyover;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TrackingMap from './components/TrackingMap';\r\nimport Flyover from './components/Flyover';\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n\r\n      <BrowserRouter>\r\n        <div>\r\n          <div id=\"wrapper\">\r\n            <nav\r\n              className=\"navbar navbar-inverse navbar-fixed-top\"\r\n              role=\"navigation\">\r\n              <a href='/'>Home</a>\r\n              <a href='/flyover'>Flyover</a>\r\n            </nav>\r\n            <div style={{backgroundColor: \"black\"}}>\r\n              <Switch>\r\n                <Route path=\"/flyover\" component={Flyover} />\r\n                <Route path=\"/\" component={TrackingMap} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n  );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {loadFlyover, } from \"./actions\";\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    loadFlyover: function () {\r\n      dispatch(loadFlyover());\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(App);\r\n","import {combineReducers} from \"redux\";\r\n\r\nfunction flyover(state = {}, action) {\r\n  if (action.type === \"FLYOVER_LOADED\") {\r\n    return action.value;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction inputLat(state = \"\", action) {\r\n    if (action.type === \"LAT_UPDATED\") {\r\n        return action.value;\r\n    }\r\n    return state;\r\n}\r\n\r\nfunction inputLong(state = \"\", action) {\r\n    if (action.type === \"LONG_UPDATED\") {\r\n        return action.value;\r\n    }\r\n    return state;\r\n}\r\n\r\nfunction buttons(state=[], action) {\r\n    if (action.type === \"BUTTONS_LOADED\") {\r\n        return action.value;\r\n    }\r\n    return state;\r\n}\r\n\r\nfunction worldData(state=[], action) {\r\n    if (action.type === \"MAP_LOADED\") {\r\n        return action.value;\r\n    }\r\n    return state;\r\n}\r\n\r\nfunction current(state={}, action) {\r\n    if (action.type === \"CURRENT_LOADED\") {\r\n        return action.value;\r\n    }\r\n    return state;\r\n}\r\n\r\nfunction selectedProjection(state={}, action) {\r\n    if (action.type === \"PROJECTION_CHANGED\") {\r\n        return action.value;\r\n    }\r\n    return state;\r\n}\r\n\r\nfunction allProjections(state=[], action) {\r\n    return state;\r\n}\r\n\r\nfunction cities(state=[], action) {\r\n    return state;\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    flyover, inputLat, inputLong, buttons, worldData, current, selectedProjection, allProjections, cities\r\n});\r\n\r\nexport default rootReducer;","import state from \"./state\";\r\nimport reducers from \"./reducers\";\r\nimport {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n typeof window === \"object\" &&\r\n window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n   \r\nconst enhancer = composeEnhancers(\r\n applyMiddleware(thunk)\r\n);\r\nconst store = createStore(reducers,state,enhancer);\r\nexport default store;\r\n","export default {\r\n  current: {},\r\n  worldData: [],\r\n  selectedProjection: {\r\n    \"geo\": \"geoMercator\",\r\n    \"name\": \"Mercator\",\r\n    \"desc\": \"One of the most common projections for general use, created in 1569 by Gerardus Mercator. All lines of latitude and longitude are straight. This makes navigation easy, but makes land closer to the poles look much larger than it really is. Notice the size of Greenland compared to the entire continent of Africa!\"\r\n  },\r\n  allProjections: [\r\n    {\r\n      \"geo\": \"geoMercator\",\r\n      \"name\": \"Mercator\",\r\n      \"desc\": \"One of the most common projections for general use, created in 1569 by Gerardus Mercator. All lines of latitude and longitude are straight. This makes navigation easy, but makes land closer to the poles look much larger than it really is. Notice the size of Greenland compared to the entire continent of Africa!\"\r\n    },\r\n    {\r\n      \"geo\": \"geoNaturalEarth1\",\r\n      \"name\": \"Natural Earth\",\r\n      \"desc\": \"A projection design in 2012 by Tom Patterson. Directions and sizes are slightly distorted to create a map that is easy to look at and keeps sizes fairly accurate.\",\r\n    },\r\n    {\r\n      \"geo\": \"geoHill\",\r\n      \"name\": \"Hill Eucyclic\",\r\n      \"desc\": \"A kidney-shaped projection made by Karl Hill in 1958. This projection is equal-area, meaning the size of each country is accurate, but shapes are distorted. Notice how small Greenland actually is compared to Africa!\"\r\n    },\r\n    {\r\n      \"geo\": \"geoAzimuthalEqualArea\",\r\n      \"name\": \"Azimuthal\",\r\n      \"desc\": \"Azimuthal projections keep accurate azimuth, meaning direction from the center of the projection. In this projection, the center is the north pole. The south pole is drsatically stretched out around the entire outer edge!\"\r\n    },\r\n    {\r\n      \"geo\": \"geoOrthographic\",\r\n      \"name\": \"Orthographic\",\r\n      \"desc\": \"Orthographic projections greatly distort distance as one moves away from the center point, completely cutting off the projection 180 degrees from the center in all directions. The result appears just as the Earth would if the viewer were in space directly over the center of the projection (in this app, a point on the equator), but can't display the entire Earth at once. This app rotates the projection to ensure the location of the ISS is always displayed near the center.\"\r\n    },\r\n    {\r\n      \"geo\": \"geoConicEqualArea\",\r\n      \"name\": \"Conic\",\r\n      \"desc\": \"Conic projections are shaped like a cone unrolled and laid out flat. Conic proejctions centered on the north pole, as this one is, can be very useful for countries or regions in middle latitudes in the northern hemisphere. However, distance is more distorted near the equator, and in the opposite hemisphere (southern in this app) the projection becomes very difficult to use.\"\r\n    },\r\n  ],\r\n  flyover: {},\r\n  inputLat: \"\",\r\n  inputLong: \"\",\r\n  buttons: [\r\n    {\r\n      name: \"São Paulo\",\r\n      timezone: -2,\r\n      lat: -23.55,\r\n      long: -46.633333,\r\n      country: \"Brazil\"\r\n    },\r\n    {\r\n      name: \"Lagos\",\r\n      timezone: 1,\r\n      lat: 6.455027,\r\n      long: 3.384082,\r\n      country: \"Nigeria\"\r\n    },\r\n    {\r\n      name: \"Dhaka\",\r\n      timezone: 6,\r\n      lat: 23.7,\r\n      long: 90.366667,\r\n      country: \"Bangladesh\"\r\n    },\r\n    {\r\n      name: \"Beijing\",\r\n      timezone: 8,\r\n      lat: 39.916667,\r\n      long: 116.383333,\r\n      country: \"China\",\r\n    },\r\n    {\r\n      name: \"New York\",\r\n      timezone: -5,\r\n      lat: 40.7127,\r\n      long: -74.0059,\r\n      country: \"USA\"\r\n    },\r\n    {\r\n      name: \"Moscow\",\r\n      timezone: 3,\r\n      lat: 55.75,\r\n      long: 37.616667,\r\n      country: \"Russia\"\r\n    },\r\n  ]\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppContainer from \"./AppContainer\";\r\nimport \"./index.css\";\r\nimport store from \"./store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}><AppContainer /></Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}